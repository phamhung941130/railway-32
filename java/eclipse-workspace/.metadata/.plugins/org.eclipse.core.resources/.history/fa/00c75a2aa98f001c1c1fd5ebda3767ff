package com.vti.DAO;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.vti.entity.Account;
import com.vti.entity.Department;
import com.vti.entity.Position;
import com.vti.ultis.jdbcUltis;

public class AccountDAO {
	private jdbcUltis jdbc;

	public AccountDAO() throws FileNotFoundException, IOException {
		jdbc = new jdbcUltis();
	}

	public List<Account> getListAccount()
			throws ClassNotFoundException, SQLException, FileNotFoundException, IOException {
		String slqSelect = "SELECT * FROM account ORDER BY DepartmentID";
		ResultSet resultSet = jdbc.executeQuery(slqSelect);
		List<Account> listAcc = new ArrayList<Account>();
		while (resultSet.next()) {
			Account acc = new Account();
			acc.setId(resultSet.getInt(1));
			acc.setEmail(resultSet.getString(2));
			acc.setUserName(resultSet.getString(3));
			acc.setFullName(resultSet.getString(4));

			DepartmentDAO depDao = new DepartmentDAO();
			Department dep = depDao.getDepartmentById(resultSet.getInt(5));
			acc.setDepartment(dep);

			PositionDAO posDao = new PositionDAO();
			Position pos = posDao.getPosByID(resultSet.getInt(6));
			acc.setPosition(pos);

			LocalDate lcd = resultSet.getDate(7).toLocalDate();
			acc.setCreateDate(lcd);

			listAcc.add(acc);

		}

		return listAcc;

	}

	public Account getAccByID(int id)
			throws ClassNotFoundException, SQLException, FileNotFoundException, IOException {
		String sql = "SELECT * FROM account WHERE AccountID = ?";
		PreparedStatement preStatement = jdbc.createPrepareStatement(sql);
		preStatement.setInt(1, id);
		ResultSet resultSet = preStatement.executeQuery();
		if (resultSet.next()) {
			Account acc = new Account();
			acc.setId(resultSet.getInt(1));
			acc.setEmail(resultSet.getString(2));
			acc.setUserName(resultSet.getString(3));
			acc.setFullName(resultSet.getString(4));
			DepartmentDAO depDao = new DepartmentDAO();
			Department dep = depDao.getDepartmentById(resultSet.getInt(5));
			acc.setDepartment(dep);
			PositionDAO posDao = new PositionDAO();
			acc.setPosition(posDao.getPosByID(resultSet.getInt(6)));
			LocalDate lcd = LocalDate.parse(resultSet.getDate(7).toString());
			acc.setCreateDate(lcd);
			return acc;

		} else {

		}

		return null;

	}
}